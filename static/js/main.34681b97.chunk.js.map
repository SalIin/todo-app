{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-filter/index.js","components/item-filter/item-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","props","done","notDone","className","SearchPanel","state","term","onSearch","e","target","value","setState","type","placeholder","this","onChange","React","Component","TodoListItem","label","onDeleted","onToggleDone","onToggleImportant","classNames","important","onClick","aria-hidden","TodoList","elements","todoData","length","map","item","id","itemProps","key","ItemFilter","buttons","filter","onBtnClick","AddTodo","onTodoInputChanged","onSubmit","preventDefault","addNewTodoItem","App","maxId","JSON","parse","localStorage","getItem","createItem","deleteItem","idx","findIndex","slice","newItem","toggleProperty","propName","el","oldItem","newArr","splice","search","toLowerCase","indexOf","countDone","countNotDone","visibleItems","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34681b97.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = (props) => {\r\n   const {done, notDone} = props;\r\n   return (\r\n      <div className=\"app-header\">\r\n         <h1 className='app-header__title'>Todo List</h1>\r\n         <p className='app-header__done-info'>{done} items done / {notDone} more to do</p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends React.Component {\r\n   state = {\r\n      term: ''\r\n   };\r\n   onSearch = (e) => {\r\n      const term = e.target.value;\r\n      this.setState({term});\r\n      this.props.onSearch(term);\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <input type=\"text\" \r\n                placeholder=\"Search\" \r\n                className='pl-3 col-md-7 search'\r\n                value={this.state.term}\r\n                onChange={this.onSearch}\r\n         />\r\n      );\r\n   }   \r\n};","import React from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends React.Component {\r\n   render() {\r\n      const { label, onDeleted, onToggleDone, onToggleImportant, done, important } = this.props;\r\n      let classNames = \"todo-list-item d-flex\";\r\n\r\n      if(done) {\r\n         classNames += ' done';\r\n      }\r\n      if(important) {\r\n         classNames += ' important';\r\n      }\r\n      \r\n      return (\r\n         <div className={ classNames }>\r\n            <span className=\"label\"\r\n                  onClick={ onToggleDone }\r\n            >\r\n               { label }\r\n            </span>\r\n            <div className=\"btns-wrapper ml-auto\">\r\n               <button type=\"button\" className=\"delete-btn\"\r\n                                     onClick={ onDeleted }\r\n                                     \r\n               >\r\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n               </button>\r\n               <button type=\"button\" className=\"important-btn\"\r\n                                     onClick={ onToggleImportant }\r\n               >\r\n                  <i className=\"fa fa-exclamation\" aria-hidden=\"true\"></i>\r\n               </button>\r\n            </div>         \r\n         </div>      \r\n      );\r\n   }\r\n}","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\n\r\nconst TodoList = ({todoData, onDeleted, onToggleDone, onToggleImportant}) => {\r\n   let elements;\r\n   if(todoData.length === 0) {\r\n      elements = <i>You have no things to do.. It's nice time to start!</i>\r\n   } else {\r\n      elements = todoData.map(item => {\r\n         const {id, ...itemProps} = item;\r\n         return (\r\n            <li key={id} className='list-group-item'>\r\n               <TodoListItem {...itemProps}\r\n                             onDeleted={() => onDeleted(id)}\r\n                             onToggleDone={() => onToggleDone(id)}\r\n                             onToggleImportant={() => onToggleImportant(id)}\r\n               />\r\n            </li>\r\n         );\r\n      });\r\n   }\r\n   \r\n   return (\r\n      <ul className='list-group todo-list'>\r\n         {elements}\r\n      </ul>\r\n   );\r\n};\r\n\r\nexport default TodoList;","import ItemFilter from './item-filter';\r\nexport default ItemFilter;","import React from 'react';\r\nimport './item-filter.css';\r\n\r\nexport default class ItemFilter extends React.Component {\r\n   buttons = [\r\n      {filter: 'all', label: 'All', id: 1},\r\n      {filter: 'active', label: 'Active', id: 2},\r\n      {filter: 'done', label: 'Done', id:3}\r\n   ];\r\n   \r\n   render() {\r\n      const {onBtnClick} = this.props;\r\n      const buttons = this.buttons.map(({filter, label, id}) => {\r\n         return(\r\n            <button type=\"button\" \r\n                    className=\"btn btn-secondary\" \r\n                    key={id}\r\n                    onClick={() => onBtnClick(filter)}\r\n            >\r\n                    {label}\r\n            </button>\r\n         );\r\n      });\r\n      return(\r\n         <div className=\"btn-group ml-auto col-md-4 filter-btns\">\r\n            {buttons}\r\n         </div>\r\n      );\r\n   }\r\n}","import AddTodo from './item-add-form';\r\nexport default AddTodo;","import React from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends React.Component {\r\n   state = {\r\n      label: ''\r\n   };\r\n   onTodoInputChanged = (e) => {\r\n      this.setState({\r\n         label: e.target.value\r\n      });\r\n   };\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.addNewTodoItem(this.state.label);\r\n      this.setState({\r\n         label: ''\r\n      });\r\n   };\r\n\r\n   render() {\r\n      let inputClasses = \"w-100 mt-3 d-flex\";\r\n      return(\r\n         <form className=\"add-todo d-flex\"\r\n               onSubmit={this.onSubmit}\r\n         >\r\n            <div className={inputClasses}>\r\n               <input type=\"text\" \r\n                      className=\"form-control mr-2 todo-label\" \r\n                      placeholder=\"Type here to add new item\"\r\n                      onChange={this.onTodoInputChanged} \r\n                      value={this.state.label}\r\n               />\r\n               <button type=\"submit\" \r\n                       className=\"btn btn-dark\"\r\n               >\r\n                  Add\r\n               </button>\r\n            </div>\r\n         </form>\r\n      );\r\n   }   \r\n};","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemFilter from '../item-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nexport default class App extends React.Component {\r\n   maxId = 100;\r\n   state = {\r\n      todoData: JSON.parse(localStorage.getItem('todos')) || [],\r\n      term: '',\r\n      filter: 'all'\r\n   };  \r\n   createItem = (label) => {\r\n      return {\r\n         id: this.maxId++,\r\n         label,\r\n         important: false,\r\n         done: false\r\n      };\r\n   };\r\n   deleteItem = (id) => {\r\n      this.setState(({todoData}) => {\r\n         const idx = todoData.findIndex(item => id === item.id);\r\n         const updatedTodos = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n\r\n         return {\r\n            todoData: updatedTodos\r\n         };\r\n      });\r\n   };\r\n   addNewTodoItem = (label) => {\r\n      const newItem = this.createItem(label);\r\n      \r\n      this.setState(({todoData}) => {\r\n         const shallowArr = [\r\n            ...todoData,\r\n            newItem\r\n         ];\r\n         return {\r\n            todoData: shallowArr\r\n         };\r\n      });\r\n   };\r\n   onToggleDone = (id) => {\r\n      this.setState(({todoData}) => {\r\n         return {\r\n            todoData: this.toggleProperty(todoData, id, 'done')\r\n         };\r\n      });\r\n   };\r\n   onToggleImportant = (id) => {\r\n      this.setState(({todoData}) => {\r\n         return {\r\n            todoData: this.toggleProperty(todoData, id, 'important')\r\n         };\r\n      });\r\n   };\r\n   toggleProperty = (todoData, id, propName) => {\r\n      const idx = todoData.findIndex(el => el.id === id);\r\n      const oldItem = todoData[idx];\r\n      const newItem = {...oldItem, [propName]: !oldItem[propName]};\r\n      const newArr = [...todoData];\r\n      newArr.splice(idx, 1, newItem);\r\n      \r\n      return newArr;\r\n   };\r\n   onSearch = (term) => {\r\n      this.setState({term});\r\n   };\r\n   onBtnClick = (filter) => {\r\n      this.setState({filter});\r\n   };\r\n   search = (todoData, term) => {\r\n      if(term.length === 0) {\r\n         return todoData;\r\n      }\r\n      return todoData.filter(item => {\r\n         return item.label\r\n                        .toLowerCase()\r\n                        .indexOf(term.toLowerCase()) > -1;\r\n      });\r\n   };\r\n   filter = (todoData, filter) => {\r\n      switch(filter) {\r\n         case 'all':\r\n            return todoData;\r\n         case 'active':\r\n            return todoData.filter(item => {\r\n               return !item.done;\r\n            });\r\n         case 'done':\r\n            return todoData.filter(item => {\r\n               return item.done;\r\n            });\r\n         default:\r\n            return todoData;\r\n      }\r\n   };\r\n\r\n   render() {\r\n      const {todoData, term, filter} = this.state;\r\n      const countDone = todoData.filter(el => el.done).length;\r\n      const countNotDone = todoData.filter(el => !el.done).length;\r\n      const visibleItems = this.filter(this.search(todoData, term), filter);\r\n      localStorage.setItem('todos', JSON.stringify(todoData));\r\n\r\n      return(\r\n         <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n               <div className='col-lg-7 col-md-9 todo-app'>\r\n                  <AppHeader done={countDone} \r\n                             notDone={countNotDone}\r\n                  />\r\n                  <div className=\"info-panel row no-gutters my-3\">\r\n                     <SearchPanel onSearch={this.onSearch} />\r\n                     <ItemFilter onBtnClick={this.onBtnClick} />\r\n                  </div>               \r\n                  <TodoList todoData={visibleItems} \r\n                            onDeleted={this.deleteItem}\r\n                            onToggleDone={this.onToggleDone}\r\n                            onToggleImportant={this.onToggleImportant}\r\n                  />\r\n                  <ItemAddForm addNewTodoItem={this.addNewTodoItem} />\r\n               </div>\r\n            </div> \r\n         </div>\r\n      );\r\n      \r\n           \r\n   };\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}